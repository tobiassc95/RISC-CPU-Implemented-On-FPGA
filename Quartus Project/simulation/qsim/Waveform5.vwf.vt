// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/10/2021 21:53:30"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          CPU3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module CPU3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
// wires                                               
wire [15:0] outA;
wire [15:0] outALU;
wire [15:0] outB;
wire [15:0] outC;
wire outCLK0;
wire outCLK1;
wire outCLK2;
wire [15:0] outLATCHB;
wire outMIR0K;
wire [15:0] outMUX;
wire [15:0] outP;
wire [11:0] outPC;

// assign statements (if any)                          
CPU3 i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.outA(outA),
	.outALU(outALU),
	.outB(outB),
	.outC(outC),
	.outCLK0(outCLK0),
	.outCLK1(outCLK1),
	.outCLK2(outCLK2),
	.outLATCHB(outLATCHB),
	.outMIR0K(outMIR0K),
	.outMUX(outMUX),
	.outP(outP),
	.outPC(outPC)
);
initial 
begin 
#10000000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #10000 1'b1;
	#10000;
end 
endmodule

